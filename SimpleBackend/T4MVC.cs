// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly HelpPageClass s_HelpPage = new HelpPageClass();
    public static HelpPageClass HelpPage { get { return s_HelpPage; } }
    public static SimpleBackend.Controllers.AccountController Account = new SimpleBackend.Controllers.T4MVC_AccountController();
    public static SimpleBackend.Controllers.BaseController Base = new SimpleBackend.Controllers.T4MVC_BaseController();
    public static SimpleBackend.Controllers.DemoController Demo = new SimpleBackend.Controllers.T4MVC_DemoController();
    public static SimpleBackend.Controllers.UserController User = new SimpleBackend.Controllers.T4MVC_UserController();
    public static T4MVC.DefaultController Default = new T4MVC.DefaultController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class HelpPageClass
    {
        public readonly string Name = "HelpPage";
        public SimpleBackend.Areas.HelpPage.Controllers.HelpController Help = new SimpleBackend.Areas.HelpPage.Controllers.T4MVC_HelpController();
        public T4MVC.HelpPage.SharedController Shared = new T4MVC.HelpPage.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext a) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ETdea {
            private const string URLPATH = "~/Scripts/ETdea";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string AutoClone_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoClone.min.js") ? Url("AutoClone.min.js") : Url("AutoClone.js");
            public static readonly string AutoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoFill.min.js") ? Url("AutoFill.min.js") : Url("AutoFill.js");
            public static readonly string AutoHistory_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoHistory.min.js") ? Url("AutoHistory.min.js") : Url("AutoHistory.js");
            public static readonly string AutoImg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoImg.min.js") ? Url("AutoImg.min.js") : Url("AutoImg.js");
            public static readonly string AutoModal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoModal.min.js") ? Url("AutoModal.min.js") : Url("AutoModal.js");
            public static readonly string AutoRemove_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoRemove.min.js") ? Url("AutoRemove.min.js") : Url("AutoRemove.js");
            public static readonly string AutoStorage_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoStorage.min.js") ? Url("AutoStorage.min.js") : Url("AutoStorage.js");
            public static readonly string AutoSubmit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoSubmit.min.js") ? Url("AutoSubmit.min.js") : Url("AutoSubmit.js");
            public static readonly string ETDea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ETDea.min.js") ? Url("ETDea.min.js") : Url("ETDea.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/ETdea/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string AutoDatatable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoDatatable.min.js") ? Url("AutoDatatable.min.js") : Url("AutoDatatable.js");
                public static readonly string AutoDateTimePicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoDateTimePicker.min.js") ? Url("AutoDateTimePicker.min.js") : Url("AutoDateTimePicker.js");
                public static readonly string AutoSummernote_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoSummernote.min.js") ? Url("AutoSummernote.min.js") : Url("AutoSummernote.js");
            }
        
            public static readonly string Sortable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Sortable.min.js") ? Url("Sortable.min.js") : Url("Sortable.js");
        }
    
        public static readonly string jquery_2_1_4_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.intellisense.min.js") ? Url("jquery-2.1.4.intellisense.min.js") : Url("jquery-2.1.4.intellisense.js");
        public static readonly string jquery_2_1_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.4.min.js") ? Url("jquery-2.1.4.min.js") : Url("jquery-2.1.4.js");
        public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        public static readonly string jquery_2_1_4_min_map = Url("jquery-2.1.4.min.map");
        public static readonly string jquery_ui_1_9_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.9.0.min.js") ? Url("jquery-ui-1.9.0.min.js") : Url("jquery-ui-1.9.0.js");
        public static readonly string jquery_ui_1_9_0_min_js = Url("jquery-ui-1.9.0.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plugins {
            private const string URLPATH = "~/Scripts/plugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dataTables {
                private const string URLPATH = "~/Scripts/plugins/dataTables";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
                public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class flot {
                private const string URLPATH = "~/Scripts/plugins/flot";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string excanvas_min_js = Url("excanvas.min.js");
                public static readonly string flot_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flot-data.min.js") ? Url("flot-data.min.js") : Url("flot-data.js");
                public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
                public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
                public static readonly string jquery_flot_tooltip_min_js = Url("jquery.flot.tooltip.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class metisMenu {
                private const string URLPATH = "~/Scripts/plugins/metisMenu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string metisMenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metisMenu.min.js") ? Url("metisMenu.min.js") : Url("metisMenu.js");
                public static readonly string metisMenu_min_js = Url("metisMenu.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class morris {
                private const string URLPATH = "~/Scripts/plugins/morris";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string morris_data_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris-data.min.js") ? Url("morris-data.min.js") : Url("morris-data.js");
                public static readonly string morris_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.js") ? Url("morris.min.js") : Url("morris.js");
                public static readonly string raphael_min_js = Url("raphael.min.js");
            }
        
        }
    
        public static readonly string sb_admin_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sb-admin-2.min.js") ? Url("sb-admin-2.min.js") : Url("sb-admin-2.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class smalot_datetimepicker {
            private const string URLPATH = "~/Scripts/smalot-datetimepicker";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datetimepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.min.js") ? Url("bootstrap-datetimepicker.min.js") : Url("bootstrap-datetimepicker.js");
            public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class locales {
                private const string URLPATH = "~/Scripts/smalot-datetimepicker/locales";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_datetimepicker_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ar.min.js") ? Url("bootstrap-datetimepicker.ar.min.js") : Url("bootstrap-datetimepicker.ar.js");
                public static readonly string bootstrap_datetimepicker_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.bg.min.js") ? Url("bootstrap-datetimepicker.bg.min.js") : Url("bootstrap-datetimepicker.bg.js");
                public static readonly string bootstrap_datetimepicker_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ca.min.js") ? Url("bootstrap-datetimepicker.ca.min.js") : Url("bootstrap-datetimepicker.ca.js");
                public static readonly string bootstrap_datetimepicker_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.cs.min.js") ? Url("bootstrap-datetimepicker.cs.min.js") : Url("bootstrap-datetimepicker.cs.js");
                public static readonly string bootstrap_datetimepicker_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.da.min.js") ? Url("bootstrap-datetimepicker.da.min.js") : Url("bootstrap-datetimepicker.da.js");
                public static readonly string bootstrap_datetimepicker_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.de.min.js") ? Url("bootstrap-datetimepicker.de.min.js") : Url("bootstrap-datetimepicker.de.js");
                public static readonly string bootstrap_datetimepicker_ee_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ee.min.js") ? Url("bootstrap-datetimepicker.ee.min.js") : Url("bootstrap-datetimepicker.ee.js");
                public static readonly string bootstrap_datetimepicker_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.el.min.js") ? Url("bootstrap-datetimepicker.el.min.js") : Url("bootstrap-datetimepicker.el.js");
                public static readonly string bootstrap_datetimepicker_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.es.min.js") ? Url("bootstrap-datetimepicker.es.min.js") : Url("bootstrap-datetimepicker.es.js");
                public static readonly string bootstrap_datetimepicker_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.fi.min.js") ? Url("bootstrap-datetimepicker.fi.min.js") : Url("bootstrap-datetimepicker.fi.js");
                public static readonly string bootstrap_datetimepicker_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.fr.min.js") ? Url("bootstrap-datetimepicker.fr.min.js") : Url("bootstrap-datetimepicker.fr.js");
                public static readonly string bootstrap_datetimepicker_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.he.min.js") ? Url("bootstrap-datetimepicker.he.min.js") : Url("bootstrap-datetimepicker.he.js");
                public static readonly string bootstrap_datetimepicker_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.hr.min.js") ? Url("bootstrap-datetimepicker.hr.min.js") : Url("bootstrap-datetimepicker.hr.js");
                public static readonly string bootstrap_datetimepicker_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.hu.min.js") ? Url("bootstrap-datetimepicker.hu.min.js") : Url("bootstrap-datetimepicker.hu.js");
                public static readonly string bootstrap_datetimepicker_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.id.min.js") ? Url("bootstrap-datetimepicker.id.min.js") : Url("bootstrap-datetimepicker.id.js");
                public static readonly string bootstrap_datetimepicker_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.is.min.js") ? Url("bootstrap-datetimepicker.is.min.js") : Url("bootstrap-datetimepicker.is.js");
                public static readonly string bootstrap_datetimepicker_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.it.min.js") ? Url("bootstrap-datetimepicker.it.min.js") : Url("bootstrap-datetimepicker.it.js");
                public static readonly string bootstrap_datetimepicker_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ja.min.js") ? Url("bootstrap-datetimepicker.ja.min.js") : Url("bootstrap-datetimepicker.ja.js");
                public static readonly string bootstrap_datetimepicker_ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ko.min.js") ? Url("bootstrap-datetimepicker.ko.min.js") : Url("bootstrap-datetimepicker.ko.js");
                public static readonly string bootstrap_datetimepicker_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.lt.min.js") ? Url("bootstrap-datetimepicker.lt.min.js") : Url("bootstrap-datetimepicker.lt.js");
                public static readonly string bootstrap_datetimepicker_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.lv.min.js") ? Url("bootstrap-datetimepicker.lv.min.js") : Url("bootstrap-datetimepicker.lv.js");
                public static readonly string bootstrap_datetimepicker_ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ms.min.js") ? Url("bootstrap-datetimepicker.ms.min.js") : Url("bootstrap-datetimepicker.ms.js");
                public static readonly string bootstrap_datetimepicker_nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.nb.min.js") ? Url("bootstrap-datetimepicker.nb.min.js") : Url("bootstrap-datetimepicker.nb.js");
                public static readonly string bootstrap_datetimepicker_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.nl.min.js") ? Url("bootstrap-datetimepicker.nl.min.js") : Url("bootstrap-datetimepicker.nl.js");
                public static readonly string bootstrap_datetimepicker_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.no.min.js") ? Url("bootstrap-datetimepicker.no.min.js") : Url("bootstrap-datetimepicker.no.js");
                public static readonly string bootstrap_datetimepicker_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.pl.min.js") ? Url("bootstrap-datetimepicker.pl.min.js") : Url("bootstrap-datetimepicker.pl.js");
                public static readonly string bootstrap_datetimepicker_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.pt-BR.min.js") ? Url("bootstrap-datetimepicker.pt-BR.min.js") : Url("bootstrap-datetimepicker.pt-BR.js");
                public static readonly string bootstrap_datetimepicker_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.pt.min.js") ? Url("bootstrap-datetimepicker.pt.min.js") : Url("bootstrap-datetimepicker.pt.js");
                public static readonly string bootstrap_datetimepicker_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ro.min.js") ? Url("bootstrap-datetimepicker.ro.min.js") : Url("bootstrap-datetimepicker.ro.js");
                public static readonly string bootstrap_datetimepicker_rs_latin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.rs-latin.min.js") ? Url("bootstrap-datetimepicker.rs-latin.min.js") : Url("bootstrap-datetimepicker.rs-latin.js");
                public static readonly string bootstrap_datetimepicker_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.rs.min.js") ? Url("bootstrap-datetimepicker.rs.min.js") : Url("bootstrap-datetimepicker.rs.js");
                public static readonly string bootstrap_datetimepicker_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ru.min.js") ? Url("bootstrap-datetimepicker.ru.min.js") : Url("bootstrap-datetimepicker.ru.js");
                public static readonly string bootstrap_datetimepicker_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.sk.min.js") ? Url("bootstrap-datetimepicker.sk.min.js") : Url("bootstrap-datetimepicker.sk.js");
                public static readonly string bootstrap_datetimepicker_sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.sl.min.js") ? Url("bootstrap-datetimepicker.sl.min.js") : Url("bootstrap-datetimepicker.sl.js");
                public static readonly string bootstrap_datetimepicker_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.sv.min.js") ? Url("bootstrap-datetimepicker.sv.min.js") : Url("bootstrap-datetimepicker.sv.js");
                public static readonly string bootstrap_datetimepicker_sw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.sw.min.js") ? Url("bootstrap-datetimepicker.sw.min.js") : Url("bootstrap-datetimepicker.sw.js");
                public static readonly string bootstrap_datetimepicker_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.th.min.js") ? Url("bootstrap-datetimepicker.th.min.js") : Url("bootstrap-datetimepicker.th.js");
                public static readonly string bootstrap_datetimepicker_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.tr.min.js") ? Url("bootstrap-datetimepicker.tr.min.js") : Url("bootstrap-datetimepicker.tr.js");
                public static readonly string bootstrap_datetimepicker_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.ua.min.js") ? Url("bootstrap-datetimepicker.ua.min.js") : Url("bootstrap-datetimepicker.ua.js");
                public static readonly string bootstrap_datetimepicker_uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.uk.min.js") ? Url("bootstrap-datetimepicker.uk.min.js") : Url("bootstrap-datetimepicker.uk.js");
                public static readonly string bootstrap_datetimepicker_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.zh-CN.min.js") ? Url("bootstrap-datetimepicker.zh-CN.min.js") : Url("bootstrap-datetimepicker.zh-CN.js");
                public static readonly string bootstrap_datetimepicker_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.zh-TW.min.js") ? Url("bootstrap-datetimepicker.zh-TW.min.js") : Url("bootstrap-datetimepicker.zh-TW.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class summernote {
            private const string URLPATH = "~/Scripts/summernote";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugin {
                private const string URLPATH = "~/Scripts/summernote/plugin";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string summernote_ext_hello_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote-ext-hello.min.js") ? Url("summernote-ext-hello.min.js") : Url("summernote-ext-hello.js");
                public static readonly string summernote_ext_hint_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote-ext-hint.min.js") ? Url("summernote-ext-hint.min.js") : Url("summernote-ext-hint.js");
                public static readonly string summernote_ext_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote-ext-video.min.js") ? Url("summernote-ext-video.min.js") : Url("summernote-ext-video.js");
            }
        
            public static readonly string summernote_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/summernote.min.js") ? Url("summernote.min.js") : Url("summernote.js");
            public static readonly string summernote_min_js = Url("summernote.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string alerts_less = Url("alerts.less");
            public static readonly string badges_less = Url("badges.less");
            public static readonly string bootstrap_less = Url("bootstrap.less");
            public static readonly string breadcrumbs_less = Url("breadcrumbs.less");
            public static readonly string button_groups_less = Url("button-groups.less");
            public static readonly string buttons_less = Url("buttons.less");
            public static readonly string carousel_less = Url("carousel.less");
            public static readonly string close_less = Url("close.less");
            public static readonly string code_less = Url("code.less");
            public static readonly string component_animations_less = Url("component-animations.less");
            public static readonly string dropdowns_less = Url("dropdowns.less");
            public static readonly string forms_less = Url("forms.less");
            public static readonly string glyphicons_less = Url("glyphicons.less");
            public static readonly string grid_less = Url("grid.less");
            public static readonly string input_groups_less = Url("input-groups.less");
            public static readonly string jumbotron_less = Url("jumbotron.less");
            public static readonly string labels_less = Url("labels.less");
            public static readonly string list_group_less = Url("list-group.less");
            public static readonly string media_less = Url("media.less");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class mixins {
                private const string URLPATH = "~/Content/bootstrap/mixins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string alerts_less = Url("alerts.less");
                public static readonly string background_variant_less = Url("background-variant.less");
                public static readonly string border_radius_less = Url("border-radius.less");
                public static readonly string buttons_less = Url("buttons.less");
                public static readonly string center_block_less = Url("center-block.less");
                public static readonly string clearfix_less = Url("clearfix.less");
                public static readonly string forms_less = Url("forms.less");
                public static readonly string gradients_less = Url("gradients.less");
                public static readonly string grid_framework_less = Url("grid-framework.less");
                public static readonly string grid_less = Url("grid.less");
                public static readonly string hide_text_less = Url("hide-text.less");
                public static readonly string image_less = Url("image.less");
                public static readonly string labels_less = Url("labels.less");
                public static readonly string list_group_less = Url("list-group.less");
                public static readonly string nav_divider_less = Url("nav-divider.less");
                public static readonly string nav_vertical_align_less = Url("nav-vertical-align.less");
                public static readonly string opacity_less = Url("opacity.less");
                public static readonly string pagination_less = Url("pagination.less");
                public static readonly string panels_less = Url("panels.less");
                public static readonly string progress_bar_less = Url("progress-bar.less");
                public static readonly string reset_filter_less = Url("reset-filter.less");
                public static readonly string reset_text_less = Url("reset-text.less");
                public static readonly string resize_less = Url("resize.less");
                public static readonly string responsive_visibility_less = Url("responsive-visibility.less");
                public static readonly string size_less = Url("size.less");
                public static readonly string tab_focus_less = Url("tab-focus.less");
                public static readonly string table_row_less = Url("table-row.less");
                public static readonly string text_emphasis_less = Url("text-emphasis.less");
                public static readonly string text_overflow_less = Url("text-overflow.less");
                public static readonly string vendor_prefixes_less = Url("vendor-prefixes.less");
            }
        
            public static readonly string mixins_less = Url("mixins.less");
            public static readonly string modals_less = Url("modals.less");
            public static readonly string navbar_less = Url("navbar.less");
            public static readonly string navs_less = Url("navs.less");
            public static readonly string normalize_less = Url("normalize.less");
            public static readonly string pager_less = Url("pager.less");
            public static readonly string pagination_less = Url("pagination.less");
            public static readonly string panels_less = Url("panels.less");
            public static readonly string popovers_less = Url("popovers.less");
            public static readonly string print_less = Url("print.less");
            public static readonly string progress_bars_less = Url("progress-bars.less");
            public static readonly string responsive_embed_less = Url("responsive-embed.less");
            public static readonly string responsive_utilities_less = Url("responsive-utilities.less");
            public static readonly string scaffolding_less = Url("scaffolding.less");
            public static readonly string tables_less = Url("tables.less");
            public static readonly string theme_less = Url("theme.less");
            public static readonly string thumbnails_less = Url("thumbnails.less");
            public static readonly string tooltip_less = Url("tooltip.less");
            public static readonly string type_less = Url("type.less");
            public static readonly string utilities_less = Url("utilities.less");
            public static readonly string variables_less = Url("variables.less");
            public static readonly string wells_less = Url("wells.less");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fontawesome {
            private const string URLPATH = "~/Content/fontawesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string animated_less = Url("animated.less");
            public static readonly string bordered_pulled_less = Url("bordered-pulled.less");
            public static readonly string core_less = Url("core.less");
            public static readonly string fixed_width_less = Url("fixed-width.less");
            public static readonly string font_awesome_less = Url("font-awesome.less");
            public static readonly string icons_less = Url("icons.less");
            public static readonly string larger_less = Url("larger.less");
            public static readonly string list_less = Url("list.less");
            public static readonly string mixins_less = Url("mixins.less");
            public static readonly string path_less = Url("path.less");
            public static readonly string rotated_flipped_less = Url("rotated-flipped.less");
            public static readonly string stacked_less = Url("stacked.less");
            public static readonly string variables_less = Url("variables.less");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
            public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
            public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
            public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
            public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
            public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
        }
    
        public static readonly string mixins_less = Url("mixins.less");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class plugins {
            private const string URLPATH = "~/Content/plugins";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class metisMenu {
                private const string URLPATH = "~/Content/plugins/metisMenu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string metisMenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metisMenu.min.css") ? Url("metisMenu.min.css") : Url("metisMenu.css");
                public static readonly string metisMenu_min_css = Url("metisMenu.min.css");
            }
        
            public static readonly string morris_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.css") ? Url("morris.min.css") : Url("morris.css");
            public static readonly string social_buttons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/social-buttons.min.css") ? Url("social-buttons.min.css") : Url("social-buttons.css");
            public static readonly string timeline_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.css") ? Url("timeline.min.css") : Url("timeline.css");
        }
    
        public static readonly string sb_admin_2_less = Url("sb-admin-2.less");
        public static readonly string sb_admin_2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sb-admin-2.min.css") ? Url("sb-admin-2.min.css") : Url("sb-admin-2.css");
        public static readonly string sb_admin_2_css_map = Url("sb-admin-2.css.map");
        public static readonly string sb_admin_2_min_css = Url("sb-admin-2.min.css");
        public static readonly string variables_less = Url("variables.less");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class ETdea 
            {
                public static partial class plugins 
                {
                    public static class Assets
                    {
                        public const string AutoDatatable_js = "~/Scripts/ETdea/plugins/AutoDatatable.js"; 
                        public const string AutoDateTimePicker_js = "~/Scripts/ETdea/plugins/AutoDateTimePicker.js"; 
                        public const string AutoSummernote_js = "~/Scripts/ETdea/plugins/AutoSummernote.js"; 
                    }
                }
                public static class Assets
                {
                    public const string AutoClone_js = "~/Scripts/ETdea/AutoClone.js"; 
                    public const string AutoFill_js = "~/Scripts/ETdea/AutoFill.js"; 
                    public const string AutoHistory_js = "~/Scripts/ETdea/AutoHistory.js"; 
                    public const string AutoImg_js = "~/Scripts/ETdea/AutoImg.js"; 
                    public const string AutoModal_js = "~/Scripts/ETdea/AutoModal.js"; 
                    public const string AutoRemove_js = "~/Scripts/ETdea/AutoRemove.js"; 
                    public const string AutoStorage_js = "~/Scripts/ETdea/AutoStorage.js"; 
                    public const string AutoSubmit_js = "~/Scripts/ETdea/AutoSubmit.js"; 
                    public const string ETDea_js = "~/Scripts/ETdea/ETDea.js"; 
                    public const string Sortable_js = "~/Scripts/ETdea/Sortable.js"; 
                }
            }
            public static partial class plugins 
            {
                public static partial class dataTables 
                {
                    public static class Assets
                    {
                        public const string dataTables_bootstrap_js = "~/Scripts/plugins/dataTables/dataTables.bootstrap.js"; 
                        public const string jquery_dataTables_js = "~/Scripts/plugins/dataTables/jquery.dataTables.js"; 
                    }
                }
                public static partial class flot 
                {
                    public static class Assets
                    {
                        public const string excanvas_min_js = "~/Scripts/plugins/flot/excanvas.min.js"; 
                        public const string flot_data_js = "~/Scripts/plugins/flot/flot-data.js"; 
                        public const string jquery_flot_js = "~/Scripts/plugins/flot/jquery.flot.js"; 
                        public const string jquery_flot_pie_js = "~/Scripts/plugins/flot/jquery.flot.pie.js"; 
                        public const string jquery_flot_resize_js = "~/Scripts/plugins/flot/jquery.flot.resize.js"; 
                        public const string jquery_flot_tooltip_min_js = "~/Scripts/plugins/flot/jquery.flot.tooltip.min.js"; 
                    }
                }
                public static partial class metisMenu 
                {
                    public static class Assets
                    {
                        public const string metisMenu_js = "~/Scripts/plugins/metisMenu/metisMenu.js"; 
                        public const string metisMenu_min_js = "~/Scripts/plugins/metisMenu/metisMenu.min.js"; 
                    }
                }
                public static partial class morris 
                {
                    public static class Assets
                    {
                        public const string morris_data_js = "~/Scripts/plugins/morris/morris-data.js"; 
                        public const string morris_js = "~/Scripts/plugins/morris/morris.js"; 
                        public const string raphael_min_js = "~/Scripts/plugins/morris/raphael.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class smalot_datetimepicker 
            {
                public static partial class locales 
                {
                    public static class Assets
                    {
                        public const string bootstrap_datetimepicker_ar_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ar.js"; 
                        public const string bootstrap_datetimepicker_bg_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.bg.js"; 
                        public const string bootstrap_datetimepicker_ca_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ca.js"; 
                        public const string bootstrap_datetimepicker_cs_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.cs.js"; 
                        public const string bootstrap_datetimepicker_da_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.da.js"; 
                        public const string bootstrap_datetimepicker_de_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.de.js"; 
                        public const string bootstrap_datetimepicker_ee_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ee.js"; 
                        public const string bootstrap_datetimepicker_el_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.el.js"; 
                        public const string bootstrap_datetimepicker_es_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.es.js"; 
                        public const string bootstrap_datetimepicker_fi_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.fi.js"; 
                        public const string bootstrap_datetimepicker_fr_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.fr.js"; 
                        public const string bootstrap_datetimepicker_he_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.he.js"; 
                        public const string bootstrap_datetimepicker_hr_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.hr.js"; 
                        public const string bootstrap_datetimepicker_hu_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.hu.js"; 
                        public const string bootstrap_datetimepicker_id_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.id.js"; 
                        public const string bootstrap_datetimepicker_is_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.is.js"; 
                        public const string bootstrap_datetimepicker_it_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.it.js"; 
                        public const string bootstrap_datetimepicker_ja_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ja.js"; 
                        public const string bootstrap_datetimepicker_ko_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ko.js"; 
                        public const string bootstrap_datetimepicker_lt_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.lt.js"; 
                        public const string bootstrap_datetimepicker_lv_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.lv.js"; 
                        public const string bootstrap_datetimepicker_ms_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ms.js"; 
                        public const string bootstrap_datetimepicker_nb_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.nb.js"; 
                        public const string bootstrap_datetimepicker_nl_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.nl.js"; 
                        public const string bootstrap_datetimepicker_no_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.no.js"; 
                        public const string bootstrap_datetimepicker_pl_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.pl.js"; 
                        public const string bootstrap_datetimepicker_pt_BR_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.pt-BR.js"; 
                        public const string bootstrap_datetimepicker_pt_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.pt.js"; 
                        public const string bootstrap_datetimepicker_ro_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ro.js"; 
                        public const string bootstrap_datetimepicker_rs_latin_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.rs-latin.js"; 
                        public const string bootstrap_datetimepicker_rs_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.rs.js"; 
                        public const string bootstrap_datetimepicker_ru_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ru.js"; 
                        public const string bootstrap_datetimepicker_sk_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.sk.js"; 
                        public const string bootstrap_datetimepicker_sl_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.sl.js"; 
                        public const string bootstrap_datetimepicker_sv_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.sv.js"; 
                        public const string bootstrap_datetimepicker_sw_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.sw.js"; 
                        public const string bootstrap_datetimepicker_th_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.th.js"; 
                        public const string bootstrap_datetimepicker_tr_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.tr.js"; 
                        public const string bootstrap_datetimepicker_ua_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.ua.js"; 
                        public const string bootstrap_datetimepicker_uk_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.uk.js"; 
                        public const string bootstrap_datetimepicker_zh_CN_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.zh-CN.js"; 
                        public const string bootstrap_datetimepicker_zh_TW_js = "~/Scripts/smalot-datetimepicker/locales/bootstrap-datetimepicker.zh-TW.js"; 
                    }
                }
                public static class Assets
                {
                    public const string bootstrap_datetimepicker_js = "~/Scripts/smalot-datetimepicker/bootstrap-datetimepicker.js"; 
                    public const string bootstrap_datetimepicker_min_js = "~/Scripts/smalot-datetimepicker/bootstrap-datetimepicker.min.js"; 
                }
            }
            public static partial class summernote 
            {
                public static partial class plugin 
                {
                    public static class Assets
                    {
                        public const string summernote_ext_hello_js = "~/Scripts/summernote/plugin/summernote-ext-hello.js"; 
                        public const string summernote_ext_hint_js = "~/Scripts/summernote/plugin/summernote-ext-hint.js"; 
                        public const string summernote_ext_video_js = "~/Scripts/summernote/plugin/summernote-ext-video.js"; 
                    }
                }
                public static class Assets
                {
                    public const string summernote_js = "~/Scripts/summernote/summernote.js"; 
                    public const string summernote_min_js = "~/Scripts/summernote/summernote.min.js"; 
                }
            }
            public static class Assets
            {
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_2_1_4_intellisense_js = "~/Scripts/jquery-2.1.4.intellisense.js"; 
                public const string jquery_2_1_4_js = "~/Scripts/jquery-2.1.4.js"; 
                public const string jquery_2_1_4_min_js = "~/Scripts/jquery-2.1.4.min.js"; 
                public const string jquery_ui_1_9_0_js = "~/Scripts/jquery-ui-1.9.0.js"; 
                public const string jquery_ui_1_9_0_min_js = "~/Scripts/jquery-ui-1.9.0.min.js"; 
                public const string jquery_unobtrusive_ajax_js = "~/Scripts/jquery.unobtrusive-ajax.js"; 
                public const string jquery_unobtrusive_ajax_min_js = "~/Scripts/jquery.unobtrusive-ajax.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string sb_admin_2_js = "~/Scripts/sb-admin-2.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class bootstrap 
            {
                public static partial class mixins 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class fontawesome 
            {
                public static class Assets
                {
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class plugins 
            {
                public static partial class metisMenu 
                {
                    public static class Assets
                    {
                        public const string metisMenu_css = "~/Content/plugins/metisMenu/metisMenu.css";
                        public const string metisMenu_min_css = "~/Content/plugins/metisMenu/metisMenu.min.css";
                    }
                }
                public static class Assets
                {
                    public const string dataTables_bootstrap_css = "~/Content/plugins/dataTables.bootstrap.css";
                    public const string morris_css = "~/Content/plugins/morris.css";
                    public const string social_buttons_css = "~/Content/plugins/social-buttons.css";
                    public const string timeline_css = "~/Content/plugins/timeline.css";
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


